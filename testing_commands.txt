TESTING COMMANDS RANGING FROM EASY TO HARD.

Basic commands:
echo "Hello, world!"
ls
pwd

Environment variable expansion:
echo "My home directory is $HOME"
echo "My username is $USER"

Command substitution:
echo "Today is $(date)"
echo "There are $(ls | wc -l) items in the current directory"

Simple pipes:
ls | grep txt
cat /etc/passwd | grep $USER

Multiple pipes:
cat /etc/passwd | grep $USER | cut -d ':' -f 1,6,7
find . -type f | xargs file | grep 'text'

Redirection:
echo "This is a test" > test.txt
cat test.txt
echo "Appended text" >> test.txt
cat test.txt

Pipes with redirection:
echo "This is a test" | tee test.txt
grep "test" < test.txt
echo "Appended text" | tee -a test.txt
cat test.txt | grep "Appended"

Background processes and job control:
sleep 10 &
jobs
fg %1

Command sequences:
echo "First command"; echo "Second command"
echo "Success" || echo "Failure"
echo "Success" && echo "Continuing"
false || echo "Fallback"

Command grouping and subshells:
(cd /tmp && pwd)
pwd
{ echo "First command"; echo "Second command"; } > group_output.txt
cat group_output.txt


Conditional execution and loops:
if [ -f test.txt ]; then echo "File exists"; else echo "File does not exist"; fi
for i in 1 2 3; do echo $i; done
while [ $i -lt 5 ]; do echo $i; i=$((i+1)); done







Multiple pipes with redirection:
echo "This is a test" | tee test.txt | grep "test" | cat >> test2.txt
cat test2.txt

Pipes with input and output redirection:
cat < test.txt | grep "test" > test_filtered.txt
cat test_filtered.txt

Complex pipeline with multiple commands:
cat /etc/passwd | awk -F: '{print $1, $3, $7}' | sort -k2,2n | head -n 5 | tee top5.txt | column -t
cat top5.txt

Piping output of multiple commands into one file:
{ echo "First line"; echo "Second line"; } | cat > combined.txt
cat combined.txt

Nested pipes with redirection:
echo "This is a test" > test.txt
cat test.txt | (grep "test" | cat >> test2.txt)
cat test2.txt

Piping output of a loop to a file:
for i in 1 2 3; do echo "Line $i"; done | cat > loop_output.txt
cat loop_output.txt

Piping output of a command to another command and then to a file:
find . -name "*.txt" | xargs cat | grep "test" > all_test.txt
cat all_test.txt

Piping a command's output to multiple commands using tee and process substitution (if your shell supports it):
echo "This is a test" | tee >(grep "test" > test_filtered.txt) >(cat >> test2.txt)
cat test_filtered.txt
cat test2.txt